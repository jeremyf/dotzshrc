#!/usr/bin/env ruby -w

# The purpose of this script is to aggregate git stats by an author.
# I'm personally about my stats.
author = "Jeremy Friesen"
log = `git log --pretty=format:'%H ~~~ %cs' --stat --author="#{author}"`.split("\n")

class Entry
  def initialize(header:, changes:)
    @header = header
    @sha, @date = header.split(" ~~~ ")
    @changes = changes
    @file_changes = 0
    @insertions = 0
    @deletions = 0
    split!(changes: changes)
  end
  attr_reader :insertions, :deletions, :file_changes, :sha, :date

  private

  def split!(changes:)
    changes.split(/, +/).each do |element|
      if element.include?("changed")
        @file_changes = element.to_i
      elsif element.include?("insertion")
        @insertions = element.to_i
      elsif element.include?("deletion")
        @deletions = element.to_i
      end
    end
  end
end

class EntrySet
  def initialize(author:)
    @author = author
    @entries = []
    @total_file_changes = 0
    @total_insertions = 0
    @total_deletions = 0
  end

  attr_reader :author, :total_file_changes, :total_insertions, :total_deletions

  def add(header:, changes:)
    entry = Entry.new(header: header, changes: changes)
    @entries << entry
     @total_file_changes += entry.file_changes
    @total_insertions += entry.insertions
    @total_deletions += entry.deletions
  end
end


HEADER_REGEXP = /^\w{40} ~~~/.freeze
CHANGES_REGEXP = /files? change/.freeze
header = nil
changes = nil
entry_set = EntrySet.new(author: author)
log.each do |line|
  if HEADER_REGEXP.match?(line)
    entry_set.add(header: header, changes: changes) if header
    header = line
  elsif CHANGES_REGEXP.match?(line)
    changes = line
  end
end

entry_set.add(header: header, changes: changes)

puts "#{entry_set.author}"
puts "\tFile Changes: #{entry_set.total_file_changes}"
puts "\tInsertions: #{entry_set.total_insertions}"
puts "\tDeletions: #{entry_set.total_deletions}"
